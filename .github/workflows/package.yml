name: Version Update and publish to NPM

on:
  workflow_dispatch:
    inputs:
      versionUpdateSignificance:
        type: choice
        description: "The significance of the version to update"
        default: "current"
        options:
          - Major
          - Minor
          - Patch
          - Release Candidate
          - current
      publish:
        type: boolean
        description: "Publish to NPM"
        default: false

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v4
      # Setup .npmrc file to publish to npm
      - name: Configure git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
      - uses: actions/setup-node@v4
        with:
          node-version: "22.4.0"
          registry-url: "https://registry.npmjs.org"
          # Defaults to the user or organization that owns the workflow file
          scope: "@fortefoundation"
          always-auth: true
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: v1.2.1
      - name: Install dependencies
        run: npm install && forge soldeer install && forge build
      - name: Update version if necessary
        if: github.event.inputs.versionUpdateSignificance != 'current'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          if [ "${{ github.event.inputs.versionUpdateSignificance }}" = "Major" ]; then
            npm version major --no-git-tag-version
          elif [ "${{ github.event.inputs.versionUpdateSignificance }}" = "Minor" ]; then
            npm version minor --no-git-tag-version
          elif [ "${{ github.event.inputs.versionUpdateSignificance }}" = "Patch" ]; then
            npm version patch --no-git-tag-version
          else
            npm version prerelease --preid=rc --no-git-tag-version
          fi
          version=$(perl -ne 'print $1 if /"version":\s*"([^"]+)"/' package.json)
          export newVersion="[version-image]: https://img.shields.io/badge/Version-${version}-brightgreen?style=for-the-badge&logo=appveyor"
          perl -i -pe's/^\[version-image\]:.*$/$ENV{newVersion}/g' README.md
          # Update the Solidity version constant with a flexible regex
          perl -i -pe "s/string\s+public\s+constant\s+version\s*=\s*\"[^\"]*\"\s*;/string public constant version = \"v$version\";/" ./src/engine/facets/RulesEnginePolicyFacet.sol
          # Validate that the replacement was successful
          if ! grep -q "string public constant version = \"v$version\";" ./src/engine/facets/RulesEnginePolicyFacet.sol; then
            echo "Error: Failed to update version in RulesEnginePolicyFacet.sol"
            exit 1
          fi
          git add ./src/engine/facets/RulesEnginePolicyFacet.sol README.md package.json package-lock.json
          git commit -m "Updating versions for release"
          git tag v$version
      - name: Push changes to the repository
        if: github.event.inputs.versionUpdateSignificance != 'current'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          tags: true
      - name: Publish the NPM package
        if: github.event.inputs.publish
        run: |
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
